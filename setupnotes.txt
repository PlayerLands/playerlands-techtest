# My setup notes

## Both projects
Forked the repo and created my branch 'jpflood'.
Setup dotnet project and run.
I needed node installing as I hadn't set it up yet on my laptop. NPM installed and did audit fix.
Getting linebreak/extensions/no-unresolved import eslint issues. Ignored locally for now but long term I need get something global and neatly set up.

## API development
I created a solution file for testapi itself and used VS2019 for API development as its currently a better IDE than VSCode for C# projects and added unit tests.
The design of the api (injected dependencies, separations, interfaces, responsibilties etc) and test coverage is typical of what I would produce. Along with coverage of the UI with tests.
No additional logging implemented.
### Post submission
Before submission of this project I did not create the integration tests but as we had UI end-to-end tests I left it as is. The integration test project is now created and separated from the unit test project.
Logger now injected into controller.
The Players framework separated into own project for reuse along with the players classes.

## Vue development
This has been a real crash course in vue development.
For some reason my use of axios wasnt working but I then realised the base url, although set in main.js, wasn't passed to my GET call. Then when I did set it directly I had a CORS issue and I thought I had to enable in the web API but my FireFox addon pretend CORS is allowed and Chrome security is disabled for UI testing too. Finally, I had the end to end working.

## UI Tests
I did not perform TDD correctly for the UI tests as I was trying to figure out how to get the
players listed form the API response in the PlayersList component.
I did try to get the PlayersList component to be tested with stubbed data rows (with sinon and 
AxiosMockAdapter) but my current implementation will prevent that until I can further understand how to properly separate the concerns and stub/mock/inject the fake data.
I also tried to add environment configuration for the API url but I couldnt get it to work, again, I would need more time to learn how to do that.